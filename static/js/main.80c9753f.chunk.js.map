{"version":3,"sources":["components/modals/EducationForm.js","actions/index.js","actions/types.js","components/preview/Education.js","components/modals/ExperienceForm.js","components/preview/Experience.js","components/modals/PrivateLifeForm.js","components/preview/PrivateLife.js","components/modals/ProfileForm.jsx","components/preview/Profile.js","components/modals/SkillsForm.js","components/preview/Skills.js","components/modals/SummaryForm.js","components/preview/Summary.js","components/preview/ImagePreview.js","components/preview/Resume.js","components/App.js","reducers/profileReducer.js","reducers/summaryReducer.js","reducers/skillsReducer.js","reducers/experienceReducer.js","reducers/educationReducer.js","reducers/privateLifeReducer.js","reducers/index.js","reducers/photoReducer.js","index.js"],"names":["EducationForm","onSubmit","formValues","props","educationUpdate","education","close","renderInput","input","label","meta","className","error","submitFailed","autoComplete","renderEducation","fieldArray","fields","map","member","index","key","Field","component","name","placeholder","type","onClick","remove","disabled","length","push","Modal","size","open","this","onClose","Header","Content","id","handleSubmit","FieldArray","Actions","form","Component","educationForm","connect","state","resume","payload","reduxForm","validate","errors","_","forOwn","value","useState","modalIsOpen","setIsOpen","openModal","specialization","school","startDate","endDate","initialValues","ExperienceForm","experienceUpdate","experience","renderTextArea","rows","renderExperience","experienceForm","exp","company","position","description","PrivateLifeForm","privateLifeUpdate","privateLife","privateLifeForm","ProfileForm","profileUpdate","profileForm","profile","photo","job","Icon","address","phone","mail","SkillsForm","skillsUpdate","skills","renderSkills","skillsForm","skill","group","items","SummaryForm","summaryUpdate","summary","summaryForm","photoUpdate","Image","src","circular","title","onChange","e","preventDefault","window","FileReader","reader","file","target","files","match","onloadend","result","readAsDataURL","handleImageChange","color","Resume","App","INITIAL_STATE","resumeReducers","combineReducers","action","reducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.80c9753f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm, FieldArray} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\";\r\n\r\nimport {educationUpdate} from \"../../actions\";\r\n\r\nclass EducationForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.educationUpdate(formValues.education);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n\r\n    renderEducation = (fieldArray) => {\r\n        return (\r\n            <div>\r\n                {fieldArray.fields.map((member, index) => (\r\n                    <div className=\"education__form-item\" key={index}>\r\n                        <div className=\"two fields\">\r\n                            <Field\r\n                                component={this.renderInput}\r\n                                name={`${member}.specialization`}\r\n                                label=\"Specialization\"\r\n                                placeholder=\"Position\"\r\n                            />\r\n                            <Field\r\n                                component={this.renderInput}\r\n                                label=\"School\"\r\n                                name={`${member}.school`}\r\n                                placeholder=\"Company\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"two fields\">\r\n                            <Field\r\n                                component={this.renderInput}\r\n                                name={`${member}.startDate`}\r\n                                label=\"Date of Start\"\r\n                                placeholder=\"Date of Start\"\r\n                            />\r\n                            <Field\r\n                                component={this.renderInput}\r\n                                label=\"Date of end\"\r\n                                name={`${member}.endDate`}\r\n                                placeholder=\"Date of end\"\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className=\"ui button negative small right floated\"\r\n                            type=\"button\"\r\n                            onClick={() => fieldArray.fields.remove(index)}\r\n                            disabled={fieldArray.fields.length <= 1}\r\n                        >\r\n                            Remove\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n                <div className=\"skills__buttons\">\r\n                    <div className=\"ui button large primary right floated\" onClick={() => fieldArray.fields.push()}>\r\n                        Add education\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit Education</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"experience-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <FieldArray name=\"education\" component={this.renderEducation}/>\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"experience-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    _.forOwn(formValues, function (value, key) {\r\n        if (!value) {\r\n            errors[key] = \"This field can't be empty\"\r\n        }\r\n    });\r\n\r\n    return errors\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        education: state.resume.education\r\n    }\r\n};\r\n\r\nconst educationForm = connect(mapStateToProps, {educationUpdate})(EducationForm);\r\n\r\nexport default reduxForm({\r\n    form: \"educationData\",\r\n    validate\r\n})(educationForm)","import {\r\n    PROFILE_UPDATE,\r\n    PHOTO_UPDATE,\r\n    SUMMARY_UPDATE,\r\n    SKILLS_UPDATE,\r\n    EXPERIENCE_UPDATE,\r\n    EDUCATION_UPDATE,\r\n    PRIVATE_UPDATE\r\n} from \"./types\";\r\n\r\nexport const profileUpdate = (profile) => {\r\n    return {\r\n        type: PROFILE_UPDATE,\r\n        payload: profile\r\n    }\r\n};\r\n\r\nexport const photoUpdate = (photo) => {\r\n    return {\r\n        type: PHOTO_UPDATE,\r\n        payload: photo\r\n    }\r\n};\r\n\r\nexport const summaryUpdate = (summary) => {\r\n    return {\r\n        type: SUMMARY_UPDATE,\r\n        payload: summary\r\n    }\r\n};\r\n\r\nexport const skillsUpdate = (skills) => {\r\n    return {\r\n        type: SKILLS_UPDATE,\r\n        payload: skills\r\n    }\r\n};\r\n\r\nexport const experienceUpdate = (experience) => {\r\n    return {\r\n        type: EXPERIENCE_UPDATE,\r\n        payload: experience\r\n    }\r\n};\r\n\r\nexport const educationUpdate = (education) => {\r\n    return {\r\n        type: EDUCATION_UPDATE,\r\n        payload: education\r\n    }\r\n};\r\n\r\nexport const privateLifeUpdate = (privateLife) => {\r\n    return {\r\n        type: PRIVATE_UPDATE,\r\n        payload: privateLife\r\n    }\r\n};","export const PROFILE_UPDATE = \"PROFILE_UPDATE\";\r\nexport const PHOTO_UPDATE = \"PHOTO_UPDATE\";\r\nexport const SUMMARY_UPDATE = \"SUMMARY_UPDATE\";\r\nexport const SKILLS_UPDATE = \"SKILLS_UPDATE\";\r\nexport const EXPERIENCE_UPDATE = \"EXPERIENCE_UPDATE\";\r\nexport const EDUCATION_UPDATE = \"EDUCATION_UPDATE\";\r\nexport const PRIVATE_UPDATE = \"PRIVATE_UPDATE\";","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport EducationForm from \"../modals/EducationForm\";\r\n\r\nconst Education = ({education}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderExperience = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section education\">\r\n                <h4 className=\"section__header\">Education</h4>\r\n                <div className=\"section__hr\"/>\r\n                <div className=\"education__list\">\r\n                    {education.map(education => {\r\n                        return (\r\n                            <div key={education.specialization} className=\"education__item\">\r\n                                <h5 className=\"education__specialization\">{education.specialization}</h5>\r\n                                <p className=\"education__school\">{education.school}</p>\r\n                                <p className=\"education__date\">{education.startDate} - {education.endDate}</p>\r\n                                <div className=\"education__hr\"/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderExperience()}\r\n            <EducationForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={{education: education}}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        education: state.resume.education\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Education)","import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm, FieldArray} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\";\r\n\r\nimport {experienceUpdate} from \"../../actions\";\r\n\r\nclass ExperienceForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.experienceUpdate(formValues.experience);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderTextArea = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <textarea rows=\"3\" {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderExperience= (fieldArray) => {\r\n        return (\r\n            <div>\r\n                {fieldArray.fields.map((member, index) => (\r\n                        <div className=\"experience__form-item\" key={index}>\r\n                            <div className=\"two fields\">\r\n                                <Field\r\n                                    component={this.renderInput}\r\n                                    name={`${member}.position`}\r\n                                    label=\"Position\"\r\n                                    placeholder=\"Position\"\r\n                                />\r\n                                <Field\r\n                                    component={this.renderInput}\r\n                                    label=\"Company\"\r\n                                    name={`${member}.company`}\r\n                                    placeholder=\"Company\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"two fields\">\r\n                                <Field\r\n                                    component={this.renderInput}\r\n                                    name={`${member}.startDate`}\r\n                                    label=\"Date of Start\"\r\n                                    placeholder=\"Date of Start\"\r\n                                />\r\n                                <Field\r\n                                    component={this.renderInput}\r\n                                    label=\"Date of end\"\r\n                                    name={`${member}.endDate`}\r\n                                    placeholder=\"Date of end\"\r\n                                />\r\n                            </div>\r\n                            <Field\r\n                                component={this.renderTextArea}\r\n                                label=\"Description\"\r\n                                name={`${member}.description`}\r\n                                placeholder=\"Description\"\r\n                            />\r\n                            <button\r\n                                className=\"ui button negative small right floated\"\r\n                                type=\"button\"\r\n                                onClick={() => fieldArray.fields.remove(index)}\r\n                                disabled={fieldArray.fields.length <= 1}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                ))}\r\n                <div className=\"skills__buttons\">\r\n                    <div className=\"ui button large primary right floated\" onClick={() => fieldArray.fields.push()}>\r\n                        Add experience\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit Experience</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"experience-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <FieldArray name=\"experience\" component={this.renderExperience}/>\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"experience-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    _.forOwn(formValues, function (value, key) {\r\n        if (!value) {\r\n            errors[key] = \"This field can't be empty\"\r\n        }\r\n    });\r\n\r\n    return errors\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        experience: state.resume.experience\r\n    }\r\n};\r\n\r\nconst experienceForm = connect(mapStateToProps, {experienceUpdate})(ExperienceForm);\r\n\r\nexport default reduxForm({\r\n    form: \"experienceData\",\r\n    validate\r\n})(experienceForm)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport ExperienceForm from \"../modals/ExperienceForm\";\r\n\r\nconst Experience = ({experience}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderExperience = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section experience\">\r\n                <h4 className=\"section__header\">Experience</h4>\r\n                <div className=\"section__hr\"/>\r\n                <div className=\"experience__list\">\r\n                    {experience.map(exp => {\r\n                        return (\r\n                            <div key={exp.company} className=\"experience__item\">\r\n                                <h5 className=\"experience__position\">{exp.position}</h5>\r\n                                <p className=\"experience__company\">{exp.company}</p>\r\n                                <p className=\"experience__date\">{exp.startDate} - {exp.endDate}</p>\r\n                                <p className=\"experience__description\">{exp.description}</p>\r\n                                <div className=\"experience__hr\"/>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderExperience()}\r\n            <ExperienceForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={{experience: experience}}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        experience: state.resume.experience\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Experience)","import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {privateLifeUpdate} from \"../../actions\";\r\n\r\nclass PrivateLifeForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.privateLifeUpdate(formValues.privateLife);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error': ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <textarea rows=\"5\" {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit Private Life</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"summary-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <Field\r\n                            name=\"privateLife\"\r\n                            label=\"Private Life\"\r\n                            component={this.renderInput}\r\n                        />\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"summary-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if (!formValues.privateLife) {\r\n        errors.privateLife = \"Too short\"\r\n    }\r\n\r\n    return errors\r\n};\r\n\r\nconst privateLifeForm = connect(null, {privateLifeUpdate})(PrivateLifeForm);\r\n\r\nexport default reduxForm({\r\n    form: \"privateLifeData\",\r\n    validate\r\n})(privateLifeForm)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport PrivateLifeForm from \"../modals/PrivateLifeForm\";\r\n\r\nconst PrivateLife = ({privateLife}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderSection = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section private\">\r\n                <h4 className=\"section__header\">Private Life</h4>\r\n                <div className=\"section__hr\"/>\r\n                <p className=\"private__content\">{privateLife}</p>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderSection()}\r\n            <PrivateLifeForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={{privateLife: privateLife}}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        privateLife: state.resume.privateLife\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateLife)","import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\"\r\n\r\nimport {profileUpdate} from \"../../actions\";\r\n\r\nclass ProfileForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.profileUpdate(formValues);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error': ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit profile</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"profile-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <div className=\"two fields\">\r\n                            <Field\r\n                                name=\"name\"\r\n                                label=\"Full name\"\r\n                                component={this.renderInput}\r\n                            />\r\n                            <Field\r\n                                name=\"job\"\r\n                                label=\"Specialization\"\r\n                                component={this.renderInput}\r\n                            />\r\n                        </div>\r\n                        <div className=\"two fields\">\r\n                            <Field\r\n                                name=\"phone\"\r\n                                label=\"Phone\"\r\n                                component={this.renderInput}\r\n                            />\r\n                            <Field\r\n                                name=\"mail\"\r\n                                label=\"E-mail\"\r\n                                component={this.renderInput}\r\n                            />\r\n                        </div>\r\n                        <Field\r\n                            name=\"address\"\r\n                            label=\"Address\"\r\n                            component={this.renderInput}\r\n                        />\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"profile-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  _.forOwn(formValues, function (value, key) {\r\n      if (!value) {\r\n          errors[key] = \"This field can't be empty\"\r\n      }\r\n  });\r\n\r\n  return errors\r\n};\r\n\r\nconst profileForm = connect(null, {profileUpdate})(ProfileForm);\r\n\r\nexport default reduxForm({\r\n    form: \"profileData\",\r\n    validate\r\n})(profileForm)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport ProfileForm from \"../modals/ProfileForm\";\r\nimport {Icon} from \"semantic-ui-react\";\r\n\r\n\r\nconst Profile = ({profile, photo}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderSection = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section profile\">\r\n                <h2 className=\"profile__name\">{profile.name}</h2>\r\n                <div className=\"profile__hr\"/>\r\n                <p className=\"profile__title\">{profile.job}</p>\r\n                <div className=\"profile__address\">\r\n                    <span>\r\n                        <Icon name=\"map marker alternate\"/>\r\n                        {profile.address}\r\n                    </span>\r\n                    <span>\r\n                        <Icon name=\"phone\"/>\r\n                        {profile.phone}\r\n                    </span>\r\n                    <span>\r\n                        <Icon name=\"envelope\"/>\r\n                        {profile.mail}\r\n                    </span>\r\n                </div>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderSection()}\r\n            <ProfileForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={profile}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.resume.profile\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm, FieldArray} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\";\r\n\r\nimport {skillsUpdate} from \"../../actions\";\r\n\r\nclass SkillsForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.skillsUpdate(formValues.skills);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderTextArea = ({input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error' : ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <textarea rows=\"3\" {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    renderSkills = (fieldArray) => {\r\n        return (\r\n            <div>\r\n                {fieldArray.fields.map((member, index) => (\r\n                        <div className=\"skills__form-item\" key={index}>\r\n                            <Field\r\n                                component={this.renderInput}\r\n                                name={`${member}.group`}\r\n                                label=\"Skills group name\"\r\n                                placeholder=\"Name of a group\"\r\n                            />\r\n                            <Field\r\n                                component={this.renderTextArea}\r\n                                label=\"Skills\"\r\n                                name={`${member}.items`}\r\n                                placeholder=\"List your skills\"\r\n                            />\r\n                            <button\r\n                                className=\"ui button negative small right floated\"\r\n                                type=\"button\"\r\n                                onClick={() => fieldArray.fields.remove(index)}\r\n                                disabled={fieldArray.fields.length <= 1}\r\n                            >\r\n                                Remove\r\n                            </button>\r\n                        </div>\r\n                ))}\r\n                <div className=\"skills__buttons\">\r\n                    <div className=\"ui button large primary right floated\" onClick={() => fieldArray.fields.push()}>\r\n                        Add skill group\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit Skills</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"skills-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <FieldArray name=\"skills\" component={this.renderSkills}/>\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"skills-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    _.forOwn(formValues, function (value, key) {\r\n        if (!value) {\r\n            errors[key] = \"This field can't be empty\"\r\n        }\r\n    });\r\n\r\n    return errors\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        skills: state.resume.skills\r\n    }\r\n};\r\n\r\nconst skillsForm = connect(mapStateToProps, {skillsUpdate})(SkillsForm);\r\n\r\nexport default reduxForm({\r\n    form: \"skillsData\",\r\n    validate\r\n})(skillsForm)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport SkillsForm from \"../modals/SkillsForm\";\r\n\r\nconst Skills = ({skills}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderSkills = () => {\r\n        return (\r\n            <div className=\"ui grid\">\r\n                {skills.map(skill => {\r\n                    return (\r\n                        <div key={skill.group} className=\"eight wide column skills__item\">\r\n                            <h5 className=\"skills__header\">{skill.group}</h5>\r\n                            <p className=\"skills__content\">{skill.items}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const renderSection = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section skills\">\r\n                <h4 className=\"section__header\">Skills</h4>\r\n                <div className=\"section__hr\"/>\r\n                {renderSkills()}\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderSection()}\r\n            <SkillsForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={{skills:skills}}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        skills: state.resume.skills\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Skills)","import React, {Component} from \"react\";\r\nimport {Modal} from 'semantic-ui-react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {summaryUpdate} from \"../../actions\";\r\n\r\nclass SummaryForm extends Component {\r\n    onSubmit = (formValues) => {\r\n        this.props.summaryUpdate(formValues.summary);\r\n        this.props.close()\r\n    };\r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.submitFailed ? 'error': ''}`;\r\n\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <textarea rows=\"5\" {...input} autoComplete=\"off\"/>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal size=\"small\" open={this.props.open} onClose={this.props.close}>\r\n                <Modal.Header>Edit summary</Modal.Header>\r\n                <Modal.Content>\r\n                    <form id=\"summary-form\" className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                                <Field\r\n                                    name=\"summary\"\r\n                                    label=\"Summary\"\r\n                                component={this.renderInput}\r\n                            />\r\n                    </form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <button onClick={this.props.close} className=\"ui button\">Cancel</button>\r\n                    <button className=\"ui button positive\" type=\"submit\" form=\"summary-form\">Send</button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if (!formValues.summary) {\r\n        errors.summary = \"Too short\"\r\n    }\r\n\r\n    return errors\r\n};\r\n\r\nconst summaryForm = connect(null, {summaryUpdate})(SummaryForm);\r\n\r\nexport default reduxForm({\r\n    form: \"summaryData\",\r\n    validate\r\n})(summaryForm)","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport SummaryForm from \"../modals/SummaryForm\";\r\n\r\nconst Summary = ({summary}) => {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setIsOpen(true);\r\n    };\r\n\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderSection = () => {\r\n        return (\r\n            <section onClick={openModal} className=\"section summary\">\r\n                <h4 className=\"section__header\">Summary</h4>\r\n                <div className=\"section__hr\"/>\r\n                <p className=\"summary__content\">{summary}</p>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {renderSection()}\r\n            <SummaryForm\r\n                open={modalIsOpen}\r\n                close={closeModal}\r\n                initialValues={{summary: summary}}\r\n            />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        summary: state.resume.summary\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Summary)","import React from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {Image, Icon} from \"semantic-ui-react\";\r\nimport {photoUpdate} from \"../../actions\";\r\n\r\n\r\nconst ImagePreview = ({photo, photoUpdate}) => {\r\n    const handleImageChange = (e) => {\r\n        e.preventDefault();\r\n\r\n        // handling image upload\r\n        if(window.FileReader) {\r\n            let reader = new FileReader();\r\n            let file = e.target.files[0];\r\n\r\n            if (file && file.type.match('image.*')) {\r\n                reader.onloadend = () => {\r\n                    photoUpdate(reader.result)\r\n                };\r\n\r\n                reader.readAsDataURL(file)\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"photo\">\r\n            <Image\r\n                src={photo}\r\n                size=\"small\"\r\n                circular\r\n                className=\"photo__portrait\"\r\n            />\r\n            <input type=\"file\" title=\"\" className=\"photo__upload\" onChange={e => handleImageChange(e)}/>\r\n            <div className=\"photo__overlay\">\r\n                <Icon name=\"cloud upload\" size=\"huge\" color=\"grey\"/>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        photo: state.resume.photo\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {photoUpdate})(ImagePreview)\r\n","import React from \"react\";\r\nimport Education from \"./Education\";\r\nimport Experience from \"./Experience\";\r\nimport PrivateLife from \"./PrivateLife\";\r\nimport Profile from \"./Profile\";\r\nimport Skills from \"./Skills\";\r\nimport Summary from \"./Summary\";\r\nimport ImagePreview from \"./ImagePreview\";\r\n\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div className=\"resume\">\r\n            <ImagePreview/>\r\n            <Profile/>\r\n            <Summary/>\r\n            <Skills/>\r\n            <Experience/>\r\n            <Education/>\r\n            <PrivateLife/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Resume","import React from \"react\";\r\nimport Resume from \"./preview/Resume\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <Resume/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App","import {PROFILE_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n    name: \"Maciej Rajewski\",\r\n    job: \"Frontend Developer\",\r\n    phone: \"+48 500 600 700\",\r\n    mail: \"example@example.com\",\r\n    address: \"ul. Example 99, 00-000 Warszawa\",\r\n};\r\n\r\nexport default (state= INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case PROFILE_UPDATE:\r\n            return {...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SUMMARY_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae elementum curabitur vitae nunc sed velit dignissim sodales ut.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae elementum curabitur vitae nunc sed velit dignissim sodales ut.\";\r\n\r\nexport default (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SUMMARY_UPDATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SKILLS_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = [\r\n    {\r\n        group: 'Cooking',\r\n        items: 'Burgers, pizza, sushi'\r\n    },\r\n    {\r\n        group: 'Drinks',\r\n        items: 'Coffee, tea, coffee-tea, beer, whiskey, vodka'\r\n    },\r\n    {\r\n        group: 'Bresaola',\r\n        items: 'Porterhouse, ribs, ground, brisket, filet'\r\n    },\r\n    {\r\n        group: 'Meatball',\r\n        items: 'Tri-tip, mignon, chuck, tenderloin'\r\n    }\r\n];\r\n\r\nexport default (state= INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SKILLS_UPDATE:\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {EXPERIENCE_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = [\r\n    {\r\n        position: 'Example Job',\r\n        company: 'Example Company',\r\n        startDate: 'June 2018',\r\n        endDate: 'Till now',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    },\r\n    {\r\n        position: 'Example Job',\r\n        company: 'Example Company',\r\n        startDate: 'June 2016',\r\n        endDate: 'June 2018',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\r\n    }\r\n];\r\n\r\nexport default (state= INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case EXPERIENCE_UPDATE:\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {EDUCATION_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = [\r\n    {\r\n        specialization: 'Example  specialization',\r\n        school: 'Example School',\r\n        startDate: 'June 2010',\r\n        endDate: 'June 2015'\r\n    }\r\n];\r\n\r\nexport default (state= INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case EDUCATION_UPDATE:\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n}","import {PRIVATE_UPDATE} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae elementum curabitur vitae nunc sed velit dignissim sodales ut.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae elementum curabitur vitae nunc sed velit dignissim sodales ut.\";\r\n\r\nexport default (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case PRIVATE_UPDATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport photoReducer from \"./photoReducer\";\r\nimport summaryReducer from \"./summaryReducer\";\r\nimport skillsReducer from \"./skillsReducer\";\r\nimport experienceReducer from \"./experienceReducer\";\r\nimport educationReducer from \"./educationReducer\";\r\nimport privateLifeReducer from \"./privateLifeReducer\";\r\n\r\nconst resumeReducers = combineReducers({\r\n    profile: profileReducer,\r\n    photo: photoReducer,\r\n    summary: summaryReducer,\r\n    skills: skillsReducer,\r\n    experience: experienceReducer,\r\n    education: educationReducer,\r\n    privateLife: privateLifeReducer\r\n});\r\n\r\nexport default resumeReducers","import {PHOTO_UPDATE} from \"../actions/types\";\r\n\r\nexport default (state= \"https://www.paulworpole.com/wp-content/uploads/2019/02/Black-and-White-Portrait-of-Man-Laughing-%C2%A9-Paul-Worpole-Photography.jpg\", action) => {\r\n    switch (action.type) {\r\n        case PHOTO_UPDATE:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport \"./App.scss\"\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport {createStore, compose, combineReducers} from \"redux\";\r\nimport resumeReducers from \"./reducers\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\nconst reducers = combineReducers({\r\n    resume: resumeReducers,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers() );\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}